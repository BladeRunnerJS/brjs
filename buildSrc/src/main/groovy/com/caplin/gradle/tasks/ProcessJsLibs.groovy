
package com.caplin.gradle.tasks

import org.gradle.api.DefaultTask
import org.gradle.api.Task
import org.gradle.api.tasks.*
import org.gradle.api.GradleException
import org.gradle.api.file.FileTree

import org.apache.commons.io.FileUtils
import org.apache.commons.lang3.StringUtils


class ProcessJsLibs extends DefaultTask
{	
	
	@InputDirectory
	// TODO: Hardcoded reference to caplin's core library location, we should attempt to use the BRJS model for getting this location
	File jsLibSrcDir = project.file('sdk/libs/javascript/caplin/src')
	
	@OutputDirectory
	File jsLibTargetDir = null
	
	@Input
	def commentStripperClasspath = null
	@Input
	String commentStripperMainClass = "com.caplin.cutlass.util.JsCommentStripperCommand"
	@Input
	List<String> copyrightLines = [ "/*",
							   " *  Copyright 1995-${Calendar.getInstance().get(Calendar.YEAR)} Caplin Systems Ltd. Do not edit this file; edits will be lost after upgrades.",
							   " */"  ]
	
	def ProcessJsLibs()
	{		
		
	}
	
	@TaskAction
	def exec() 
	{
		if (jsLibTargetDir == null)
		{
			throw new GradleException("jsLibTargetDir must be set.")
		}
		if (commentStripperClasspath == null)
		{
			throw new GradleException("commentStripperClasspath classpath must be set.")
		}
		
		project.javaexec {
			main = commentStripperMainClass
			classpath = commentStripperClasspath
			args = [jsLibSrcDir, jsLibTargetDir]
		}
		
		project.fileTree(dir: jsLibTargetDir, include:"**/*.js").visit { element ->
			if (element.file.isFile()) {
				List<String> lines = FileUtils.readLines(element.file)
				FileUtils.writeLines(element.file, copyrightLines + [""] + lines)
			}
		}
	}
	
}

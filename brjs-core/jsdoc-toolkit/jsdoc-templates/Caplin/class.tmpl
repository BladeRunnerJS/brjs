
{+include("template-includes/header.html")+}

<div class="one-third">
	{+publish.classesIndex+}
</div>

<div id="api_content_wrapper" class="two-thirds">

	<div id="api_content">

		<div class='class-type'>
			<span class='class-icon {+data.classType.toLowerCase()+}'></span>
			<span class='text'>{+data.classType+}</span>
		</div>
	
		<!-- CLASS TITLE -->
		{!
			var classPackage = data.alias.substring(0, data.alias.lastIndexOf("."));
			var className = data.alias.substring(data.alias.lastIndexOf(".")+1);
		!}
		
		<div class='classPackage'>{+ 
			classPackage 
		+}</div>
		<h2 class="classTitle">{+ 
			className 
		+}</h2>
		
		<if test="data.isAlpha">
			<div class="warning alpha-class info">The class is still an Alpha release. It should only be used for experimental development as substantial changes may occur.</div>
		</if>
		<if test="data.isBeta">
			<div class="warning beta-class info">The class is still in Beta and is subject to API changes.</div>
		</if>
		<if test="data.isDeprecated">
			<div class="warning deprecated-class info">The class has been deprecated and may be removed in future releases.</div>
		</if>

		<!-- CLASS SUMMARY -->
		<div>
			<if test="data.version"><div class='version'>Version {+ data.version +}.</div></if>
			<if test="data.augments.length">
				<div class='extends'>
					Extends
					{+
						data.augments
						.sort()
						.map(
							function($) { return new Link().toSymbol($); }
						)
						.join(", ")
					+}.
				</div>
			</if>
			<if test="data.implement.length">
				<div class='implements'>
					Implements
					{+
						data.implement
						.sort()
						.map(
							function($) { return new Link().toSymbol($); }
						)
						.join(", ")
					+}.
				</div>
			</if>
			{+resolveLinks(data.classDesc)+}
		</div>

		<div class="divider">
			<span class='divider-image'></span>
		</div>

		<!-- CONSTRUCTOR SUMMARY -->			
		<if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
			<h4>Constructor Summary</h4>
			<table>
				<thead>
					<tr>
						<th scope="col">Attributes</th>
						<th scope="col">Name and Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="attributes">
							<code>{!
								if (data.isPrivate) output += "&lt;private&gt; ";
								if (data.isInner) output += "&lt;inner&gt; ";
							!}</code>
						</td>
						<td {!if (data.comment.getTag("hilited").length){output += 'style="color: red"'}!}>
							<code>{+ new Link().toSymbol(data.alias).inner('constructor')+}<if test="data.classType != 'Namespace '">{+ makeSignature(data.params) +}</if></code>
							<p>{+resolveLinks(summarize(data.desc))+}</p>
						</td>
					</tr>
				</tbody>
			</table>

			<div class="divider">
				<span class='divider-image'></span>
			</div>

		</if>
		
		<!-- PROPERTIES SUMMARY -->
		<if test="data.properties.length">

			{! var ownProperties = data.properties.filter(function($){return $.memberOf == data.alias && !$.isNamespace}).sort(makeSortby("name")); !}

			<if test="ownProperties.length">
				<h4>Field Summary</h4>
				<table>
					<thead>
						<tr>
							<th scope="col">Attributes</th>
							<th scope="col">Name and Description</th>
						</tr>
					</thead>
					<tbody>
						<for each="member" in="ownProperties">
							<tr>
								<td class="attributes">
									<code>{!
										if (member.isPrivate) output += "&lt;private&gt; ";
										if (member.isInner) output += "&lt;inner&gt; ";
										if (member.isStatic) output += "&lt;static&gt; ";
										if (member.isConstant) output += "&lt;constant&gt; ";
									!}</code>
								</td>
								<td>
									<code><if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if>{+new Link().toSymbol(member.alias).withText(member.name)+}</code>
									<p>{+resolveLinks(summarize(member.desc))+}</p>
								</td>
							</tr>
						</for>
					</tbody>
				</table>

			</if>
			
			<if test="data.inheritsFrom.length">
				<dl>
					{!
						var borrowedMembers = data.properties.filter(function($) {return $.memberOf != data.alias});
						var contributers = [];
						borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
						for (var i = 0, l = contributers.length; i < l; i++) {
							output +=
								"<dt>Fields borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
								+
								"<dd>" +
								borrowedMembers
								.filter(
									function($) { return $.memberOf == contributers[i] }
								)
								.sort(makeSortby("name"))
								.map(
									function($) { return new Link().toSymbol($.alias).withText($.name) }
								)
								.join(", ")
								+
								"</dd>";
						}
					!}
				</dl>

			</if>

			<div class="divider">
				<span class='divider-image'></span>
			</div>

		</if>
		
		<!-- METHODS SUMMARY -->
		<if test="data.methods.length">
			{! var ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
			<if test="ownMethods.length">
				<h4>Method Summary</h4>
				<table>
					<thead>
						<tr>
							<th scope="col">Attributes</th>
							<th scope="col">Name and Description</th>
						</tr>
					</thead>
					<tbody>
						<for each="member" in="ownMethods">
							<tr>
								<td class='attributes'>
									<code>{!
										if (member.isPrivate) output += "&lt;private&gt; ";
										if (member.isInner) output += "&lt;inner&gt; ";
										if (member.isStatic) output += "&lt;static&gt; ";
									!}</code>
								</td>
								<td>
									<code>
										<if test="member.type">
											<span>{+new Link().toSymbol(member.type)+}</span>
										</if>
										<if test="!member.type">
											<span>void</span>
										</if>
										{+new Link().toSymbol(member.alias).withText(member.name.replace(/\^\d+$/, ''))+}{+makeSignature(member.params)+}
									</code>
									<p class="method-summary">{+resolveLinks(summarize(member.desc))+}</p>
								</td>
							</tr>
						</for>
					</tbody>
				</table>
			</if>
			<if test="data.inheritsFrom.length">
				<dl>
				{!
					var superclassMethodOutput = "";
					var interfaceMethodOutput = "";
				
					var borrowedMembers = data.methods.filter(function($) {return $.memberOf != data.alias});
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
					
						var contributer = contributers[i];
						
						var contributerDescription = "";
						
						for (var x = 0; x < data.augments.length; x++) {
							var augmentedClass = data.augments[x];
							if (augmentedClass == contributer)
							{
								contributerDescription = "Methods inherited from class "+new Link().toSymbol(contributer)+": ";
							}
						}
						for (var x = 0; x < data.implement.length; x++) {
							var implementedClass = data.implement[x];
							if (implementedClass == contributer)
							{
								contributerDescription = "Methods implemented from class "+new Link().toSymbol(contributer)+": ";
							}
						}
						
						if (contributerDescription === "")
						{
							contributerDescription = "Methods from " + new Link().toSymbol( contributer ) + ": ";
						}
						
						superclassMethodOutput +=
							"<dt>" + contributerDescription + "</dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributer }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
					output += superclassMethodOutput + "\n" + interfaceMethodOutput;
				!}
				</dl>
			</if>
			<div class="divider">
				<span class='divider-image'></span>
			</div>
		</if>

		<!-- EVENTS SUMMARY -->
		<if test="data.events.length">
			{! var ownEvents = data.events.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
			<if test="ownEvents.length">
				<h4>Event Summary</h4>
				<table>
					<thead>
						<tr>
							<th scope="col">Attributes</th>
							<th scope="col">Name and Description</th>
						</tr>
					</thead>
					<tbody>
						<for each="member" in="ownEvents">
							<tr>
								<td class="attributes">
									<code>{!
										if (member.isPrivate) output += "&lt;private&gt; ";
										if (member.isInner) output += "&lt;inner&gt; ";
										if (member.isStatic) output += "&lt;static&gt; ";
									!}</code>
								</td>
								<td>
									<code><if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if>{+new Link().toSymbol(member.alias).withText(member.name)+}{+makeSignature(member.params)+}
									</code>
									<p>{+resolveLinks(summarize(member.desc))+}</p>
								</td>
							</tr>
						</for>
					</tbody>
				</table>
			</if>
			<if test="data.inheritsFrom.length">
				<dl>
				{!
					var borrowedMembers = data.events.filter(function($) {return $.memberOf != data.alias});
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Events borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				
				!}
				</dl>
			</if>
			<div class="divider">
				<span class='divider-image'></span>
			</div>
		</if>
		
		<!-- CONSTRUCTOR DETAILS -->
		<if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
				<h4>Constructor Detail</h4>
				<div class="features-wrapper" id="constructor">
					<p class="header">
						<span class="arrow">&#9658;</span>
						<code>{!
							if (data.isPrivate) output += "&lt;private&gt; ";
							if (data.isInner) output += "&lt;inner&gt; ";
						!}
						{+ data.alias +}<if test="data.classType != 'Namespace '">{+ makeSignature(data.params) +}</if>
						</code>
					</p>
					<p>
						{+resolveLinks(data.desc)+}
						<if test="data.author">
							<br>
							<em>Author: </em>{+data.author+}.
						</if>
					</p>
					<if test="data.example.length">
						<for each="example" in="data.example">
							<pre class="code">{+example+}</pre>
						</for>
					</if>
					<if test="data.params.length">
						<div class="heading">Parameters</div>						
						<table class="params">
							<for each="item" in="data.params">
								<tr>
									<td class="param-type">{+((item.type)?""+("<span>"+(new Link().toSymbol(item.type)+"</span> ")) : "")+}</td>
									<td class="param-name">
										{+item.name+}
										<if test="item.isOptional"><em>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></em></if>
									</td>
									<td class="param-desc">{+resolveLinks(item.desc)+}</td>
								</tr>
							</for>
						</table>
					</if>
					<if test="data.deprecated">
						<dl>
							<dt class="heading">Deprecated</dt>
							<dt>
								{+resolveLinks(data.deprecated)+}
							</dt>
						</dl>
					</if>
					<if test="data.since">
						<dl>
							<dt class="heading">Since</dt>
							<dd>{+ data.since +}</dd>
						</dl>
					</if>
					<if test="data.exceptions.length">
						<dl>
							<dt class="heading">Throws</dt>
								<for each="item" in="data.exceptions">
									<dt>
										{+((item.type)?"<span>"+(new Link().toSymbol(item.type))+"</span> " : "")+} {+item.name+}
									</dt>
									<dd>{+resolveLinks(item.desc)+}</dd>
								</for>
						</dl>
					</if>
					<if test="data.returns.length">
						<dl>
							<dt class="heading">Returns</dt>
							<for each="item" in="data.returns">
								<dd>{+((item.type)?"<span>{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
							</for>
						</dl>
					</if>
					<if test="data.requires.length">
						<dl>
						<dt class="heading">Requires</dt>
						<for each="item" in="data.requires">
							<dd>{+ new Link().toSymbol(item) +}</dd>
						</for>
						</dl>
					</if>
					<if test="data.see.length">
						<dl>
							<dt class="heading">See</dt>
							<for each="item" in="data.see">
								<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
						</dl>
					</if>
				</div>

				<div class="divider">
					<span class='divider-image'></span>
				</div>
		</if>

		<!-- FIELD DETAILS -->		
		<if test="defined(ownProperties) && ownProperties.length">
			<h4>Field Detail</h4>
			<for each="member" in="ownProperties">
					<div class="features-wrapper" id="{+Link.symbolNameToLinkName(member)+}">
						<p class="header">
							<span class="arrow">&#9658;</span>
							<code>
								{!
									if (member.isPrivate) output += "&lt;private&gt; ";
									if (member.isInner) output += "&lt;inner&gt; ";
									if (member.isStatic) output += "&lt;static&gt; ";
									if (member.isConstant) output += "&lt;constant&gt; ";
								!}
								<if test="member.type"><span>{+new Link().toSymbol(member.type)+}</span></if>
								<if test="member.isStatic && member.memberOf != '_global_'"><span>{+member.memberOf+}.</span></if>{+member.name+}
							</code>
						</p>
						<p>{+resolveLinks(member.desc)+}</p>
						<if test="member.example.length">
							<for each="example" in="member.example">
								<pre class="code">{+example+}</pre>
							</for>
						</if>
						<if test="member.deprecated">
							<dl>
								<dt class="heading">Deprecated</dt>
								<dt>{+ resolveLinks(member.deprecated) +}</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl>
								<dt class="heading">Since</dt>
								<dd>{+ member.since +}</dd>
							</dl>
						</if>
						<if test="member.see.length">
							<dl>
								<dt class="heading">See</dt>
								<for each="item" in="member.see">
									<dd>{+ new Link().toSymbol(item) +}</dd>
								</for>
							</dl>
						</if>
						<if test="member.defaultValue">
							<dl>
								<dt class="heading">Default Value</dt>
								<dd>{+resolveLinks(member.defaultValue)+}</dd>
							</dl>
						</if>
						<!--
						<if test="!$member_last">
						</if> -->
					</div>
			</for>

			<div class="divider">
				<span class='divider-image'></span>
			</div>

		</if>

		<!-- METHOD DETAILS -->		
		<if test="defined(ownMethods) && ownMethods.length">
			<h4>Method Detail</h4>
			<for each="member" in="ownMethods">
				<div class="features-wrapper" id="{+Link.symbolNameToLinkName(member)+}">
						<p class="header" >
							<span class="arrow">&#9658;</span>
							<code>{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
							!}
							<if test="member.type">
								<span>{+new Link().toSymbol(member.type)+}</span>
							</if>
							<if test="!member.type">
								<span>void</span>
							</if>
							{+member.name.replace(/\^\d+$/, '')+}{+makeSignature(member.params)+}
							</code>
						</p>
						<p>{+resolveLinks(member.desc)+}</p>
						<if test="member.example.length">
							<for each="example" in="member.example">
								<pre class="code">{+example+}</pre>
							</for>
						</if>
						
						<if test="member.params.length">
							<div class="heading">Parameters</div>	
							<table class="params">
								<for each="item" in="member.params">
									<tr>
										<td class="param-type">{+((item.type)?""+("<span>"+(new Link().toSymbol(item.type)+"</span> ")) : "")+}</td>
										<td class="param-name">
											{+item.name+}
											<if test="item.isOptional"><em>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></em></if>
										</td>
										<td class="param-desc">{+resolveLinks(item.desc)+}</td>
									</tr>
								</for>
							</table>
						</if>
						<if test="member.deprecated">
							<dl>
								<dt class="heading">Deprecated</dt>
								<dt>
									{+ resolveLinks(member.deprecated) +}
								</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl>
								<dt>Since:</dt>
								<dd>{+ member.since +}</dd>
							</dl>
						</if>
						<if test="member.exceptions.length">
							<dl>
								<dt class="heading">Throws</dt>
								<for each="item" in="member.exceptions">
									<dt>
										{+((item.type)?"<span>"+(new Link().toSymbol(item.type))+"</span> " : "")+} {+item.name+}
									</dt>
									<dd>{+resolveLinks(item.desc)+}</dd>
								</for>
							</dl>
						</if>
						<if test="member.returns.length">
							<dl>
								<dt class="heading">Returns</dt>
								<for each="item" in="member.returns">
									<dd>{+((item.type)?"<span>{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
								</for>
							</dl>
						</if>
						<if test="member.requires.length">
							<dl>
								<dt class="heading">Requires</dt>
								<for each="item" in="member.requires">
									<dd>{+ resolveLinks(item) +}</dd>
								</for>
							</dl>
						</if>
						<if test="member.see.length">
							<dl>
								<dt class="heading">See</dt>
								<for each="item" in="member.see">
									<dd>{+ new Link().toSymbol(item) +}</dd>
								</for>
							</dl>
						</if>
						<!--
						<if test="!$member_last">
							<div class="divider">
								<span class='divider-image'></span>
							</div>
						</if> -->
				</div>
			</for>

			<div class="divider">
				<span class='divider-image'></span>
			</div>

		</if>

		<!-- EVENT DETAILS -->
		<if test="defined(ownEvents) && ownEvents.length">
			<h4>Event Detail</h4>
			<for each="member" in="ownEvents">
				<div class="features-wrapper" id="{+Link.symbolNameToLinkName(member)+}">
					<code>{!
						if (member.isPrivate) output += "&lt;private&gt; ";
						if (member.isInner) output += "&lt;inner&gt; ";
						if (member.isStatic) output += "&lt;static&gt; ";
					!} <if test="member.type"><span>{{+new Link().toSymbol(member.type)+}}</span></if> <if test="member.isStatic && member.memberOf != '_global_'"><span>{+member.memberOf+}.</span></if> {+member.name+}{+makeSignature(member.params)+}
					</code>
					<p>{+resolveLinks(member.desc)+}</p>
					<if test="member.example.length">
						<for each="example" in="member.example">
							<pre class="code">{+example+}</pre>
						</for>
					</if>
					<if test="member.params.length">
						<dl>
							<dt class="heading">Parameters</dt>
							<for each="item" in="member.params">
								<dt>
									{+((item.type)?"<span>{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+item.name+}
									<if test="item.isOptional"><em>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></em></if>
								</dt>
								<dd>{+ resolveLinks(item.desc) +}</dd>
							</for>
						</dl>
					</if>
					<if test="member.deprecated">
						<dl>
							<dt class="heading">Deprecated</dt>
							<dt>{+ resolveLinks(member.deprecated) +}</dt>
						</dl>
					</if>
					<if test="member.since">
						<dl>
							<dt>Since:</dt>
							<dd>{+ member.since +}</dd>
						</dl>
					</if>
					<if test="member.exceptions.length">
						<dl>
							<dt class="heading">Throws</dt>
							<for each="item" in="member.exceptions">
								<dt>
									{+((item.type)?"<span>{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} {+item.name+}
								</dt>
								<dd>{+ resolveLinks(item.desc) +}</dd>
							</for>
						</dl>
					</if>
					<if test="member.returns.length">
						<dl>
							<dt class="heading">Returns</dt>
							<for each="item" in="member.returns">
								<dd>{+((item.type)?"<span>{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
							</for>
						</dl>
					</if>
					<if test="member.requires.length">
						<dl>
							<dt class="heading">Requires</dt>
							<for each="item" in="member.requires">
								<dd>{+ resolveLinks(item) +}</dd>
							</for>
						</dl>
					</if>
					<if test="member.see.length">
						<dl>
							<dt class="heading">See</dt>
							<for each="item" in="member.see">
								<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
						</dl>
					</if>
				<!-- <if test="!$member_last"><hr></if> -->
				</div>
			</for>

			<div class="divider">
				<span class='divider-image'></span>
			</div>

		</if>

	</div>
	<!-- end #api_content -->

</div>
<!-- end #api_content_wrapper -->

{+include("template-includes/footer.html")+}

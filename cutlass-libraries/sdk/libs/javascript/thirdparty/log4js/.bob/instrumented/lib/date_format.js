/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['date_format.js']) {
  _$jscoverage['date_format.js'] = [];
  _$jscoverage['date_format.js'][1] = 0;
  _$jscoverage['date_format.js'][2] = 0;
  _$jscoverage['date_format.js'][3] = 0;
  _$jscoverage['date_format.js'][4] = 0;
  _$jscoverage['date_format.js'][5] = 0;
  _$jscoverage['date_format.js'][7] = 0;
  _$jscoverage['date_format.js'][8] = 0;
  _$jscoverage['date_format.js'][9] = 0;
  _$jscoverage['date_format.js'][10] = 0;
  _$jscoverage['date_format.js'][12] = 0;
  _$jscoverage['date_format.js'][15] = 0;
  _$jscoverage['date_format.js'][16] = 0;
  _$jscoverage['date_format.js'][24] = 0;
  _$jscoverage['date_format.js'][26] = 0;
  _$jscoverage['date_format.js'][27] = 0;
  _$jscoverage['date_format.js'][28] = 0;
  _$jscoverage['date_format.js'][29] = 0;
  _$jscoverage['date_format.js'][30] = 0;
  _$jscoverage['date_format.js'][32] = 0;
  _$jscoverage['date_format.js'][33] = 0;
  _$jscoverage['date_format.js'][35] = 0;
  _$jscoverage['date_format.js'][38] = 0;
  _$jscoverage['date_format.js'][39] = 0;
  _$jscoverage['date_format.js'][40] = 0;
  _$jscoverage['date_format.js'][41] = 0;
  _$jscoverage['date_format.js'][42] = 0;
  _$jscoverage['date_format.js'][45] = 0;
  _$jscoverage['date_format.js'][46] = 0;
  _$jscoverage['date_format.js'][47] = 0;
  _$jscoverage['date_format.js'][48] = 0;
  _$jscoverage['date_format.js'][49] = 0;
  _$jscoverage['date_format.js'][50] = 0;
  _$jscoverage['date_format.js'][51] = 0;
  _$jscoverage['date_format.js'][52] = 0;
  _$jscoverage['date_format.js'][53] = 0;
  _$jscoverage['date_format.js'][54] = 0;
  _$jscoverage['date_format.js'][55] = 0;
  _$jscoverage['date_format.js'][64] = 0;
}
_$jscoverage['date_format.js'][1]++;
"use strict";
_$jscoverage['date_format.js'][2]++;
exports.ISO8601_FORMAT = "yyyy-MM-dd hh:mm:ss.SSS";
_$jscoverage['date_format.js'][3]++;
exports.ISO8601_WITH_TZ_OFFSET_FORMAT = "yyyy-MM-ddThh:mm:ssO";
_$jscoverage['date_format.js'][4]++;
exports.DATETIME_FORMAT = "dd MM yyyy hh:mm:ss.SSS";
_$jscoverage['date_format.js'][5]++;
exports.ABSOLUTETIME_FORMAT = "hh:mm:ss.SSS";
_$jscoverage['date_format.js'][7]++;
function padWithZeros(vNumber, width) {
  _$jscoverage['date_format.js'][8]++;
  var numAsString = vNumber + "";
  _$jscoverage['date_format.js'][9]++;
  while (numAsString.length < width) {
    _$jscoverage['date_format.js'][10]++;
    numAsString = "0" + numAsString;
}
  _$jscoverage['date_format.js'][12]++;
  return numAsString;
}
_$jscoverage['date_format.js'][15]++;
function addZero(vNumber) {
  _$jscoverage['date_format.js'][16]++;
  return padWithZeros(vNumber, 2);
}
_$jscoverage['date_format.js'][24]++;
function offset(date) {
  _$jscoverage['date_format.js'][26]++;
  var os = Math.abs(date.getTimezoneOffset());
  _$jscoverage['date_format.js'][27]++;
  var h = String(Math.floor(os / 60));
  _$jscoverage['date_format.js'][28]++;
  var m = String(os % 60);
  _$jscoverage['date_format.js'][29]++;
  if (h.length == 1) {
    _$jscoverage['date_format.js'][30]++;
    h = "0" + h;
  }
  _$jscoverage['date_format.js'][32]++;
  if (m.length == 1) {
    _$jscoverage['date_format.js'][33]++;
    m = "0" + m;
  }
  _$jscoverage['date_format.js'][35]++;
  return date.getTimezoneOffset() < 0? "+" + h + m: "-" + h + m;
}
_$jscoverage['date_format.js'][38]++;
exports.asString = (function (date) {
  _$jscoverage['date_format.js'][39]++;
  var format = exports.ISO8601_FORMAT;
  _$jscoverage['date_format.js'][40]++;
  if (typeof date === "string") {
    _$jscoverage['date_format.js'][41]++;
    format = arguments[0];
    _$jscoverage['date_format.js'][42]++;
    date = arguments[1];
  }
  _$jscoverage['date_format.js'][45]++;
  var vDay = addZero(date.getDate());
  _$jscoverage['date_format.js'][46]++;
  var vMonth = addZero(date.getMonth() + 1);
  _$jscoverage['date_format.js'][47]++;
  var vYearLong = addZero(date.getFullYear());
  _$jscoverage['date_format.js'][48]++;
  var vYearShort = addZero(date.getFullYear().toString().substring(3, 4));
  _$jscoverage['date_format.js'][49]++;
  var vYear = (format.indexOf("yyyy") > -1? vYearLong: vYearShort);
  _$jscoverage['date_format.js'][50]++;
  var vHour = addZero(date.getHours());
  _$jscoverage['date_format.js'][51]++;
  var vMinute = addZero(date.getMinutes());
  _$jscoverage['date_format.js'][52]++;
  var vSecond = addZero(date.getSeconds());
  _$jscoverage['date_format.js'][53]++;
  var vMillisecond = padWithZeros(date.getMilliseconds(), 3);
  _$jscoverage['date_format.js'][54]++;
  var vTimeZone = offset(date);
  _$jscoverage['date_format.js'][55]++;
  var formatted = format.replace(/dd/g, vDay).replace(/MM/g, vMonth).replace(/y{1,4}/g, vYear).replace(/hh/g, vHour).replace(/mm/g, vMinute).replace(/ss/g, vSecond).replace(/SSS/g, vMillisecond).replace(/O/g, vTimeZone);
  _$jscoverage['date_format.js'][64]++;
  return formatted;
});
_$jscoverage['date_format.js'].source = ["\"use strict\";","exports.ISO8601_FORMAT = \"yyyy-MM-dd hh:mm:ss.SSS\";","exports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ssO\";","exports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";","exports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";","","function padWithZeros(vNumber, width) {","  var numAsString = vNumber + \"\";","  while (numAsString.length &lt; width) {","    numAsString = \"0\" + numAsString;","  }","  return numAsString;","}","  ","function addZero(vNumber) {","  return padWithZeros(vNumber, 2);","}","","/**"," * Formats the TimeOffest"," * Thanks to http://www.svendtofte.com/code/date_format/"," * @private"," */","function offset(date) {","  // Difference to Greenwich time (GMT) in hours","  var os = Math.abs(date.getTimezoneOffset());","  var h = String(Math.floor(os/60));","  var m = String(os%60);","  if (h.length == 1) {","    h = \"0\" + h;","  }","  if (m.length == 1) {","    m = \"0\" + m;","  }","  return date.getTimezoneOffset() &lt; 0 ? \"+\"+h+m : \"-\"+h+m;","}","","exports.asString = function(/*format,*/ date) {","  var format = exports.ISO8601_FORMAT;","  if (typeof(date) === \"string\") {","    format = arguments[0];","    date = arguments[1];","  }","","  var vDay = addZero(date.getDate());","  var vMonth = addZero(date.getMonth()+1);","  var vYearLong = addZero(date.getFullYear());","  var vYearShort = addZero(date.getFullYear().toString().substring(3,4));","  var vYear = (format.indexOf(\"yyyy\") &gt; -1 ? vYearLong : vYearShort);","  var vHour  = addZero(date.getHours());","  var vMinute = addZero(date.getMinutes());","  var vSecond = addZero(date.getSeconds());","  var vMillisecond = padWithZeros(date.getMilliseconds(), 3);","  var vTimeZone = offset(date);","  var formatted = format","    .replace(/dd/g, vDay)","    .replace(/MM/g, vMonth)","    .replace(/y{1,4}/g, vYear)","    .replace(/hh/g, vHour)","    .replace(/mm/g, vMinute)","    .replace(/ss/g, vSecond)","    .replace(/SSS/g, vMillisecond)","    .replace(/O/g, vTimeZone);","  return formatted;","","};"];

<?js
var data = obj;
var self = this;
var defaultObjectClass = '';

["alpha", "beta"].forEach(function(tag) {
	if (data.tags) {
        for (var i = 0; i < data.tags.length; i++) {
            var dataTag = data.tags[i];
            var dataTagTitle = dataTag.title;
            if (dataTagTitle == tag) {
                data[dataTagTitle] = true;
            }
        }
    }
});

// Check if the default value is an object or array; if so, apply code highlighting
if (data.defaultvalue && (data.defaultvaluetype === 'object' || data.defaultvaluetype === 'array')) {
    data.defaultvalue = "<pre class=\"prettyprint\"><code>" + data.defaultvalue + "</code></pre>";
    defaultObjectClass = ' class="object-value"';
}
?>

<dl class="details">
    <?js
        var properties = data.properties;
        if (properties && properties.length && properties.forEach) {
    ?>

        <h5 class="subsection-title">Properties:</h5>

        <dl><?js= this.partial('properties.tmpl', properties) ?></dl>

    <?js } ?>

    <?js if (data.version) {?>
    <dt class="tag-version">Version:</dt>
    <dd class="tag-version"><ul class="dummy"><li><?js= version ?></li></ul></dd>
    <?js } ?>

    <?js if (data.since) {?>
    <dt class="tag-since">Since:</dt>
    <dd class="tag-since"><ul class="dummy"><li><?js= since ?></dd>
    <?js } ?>

    <?js if (data.inherited && data.inherits) { ?>
    <dt class="inherited-from">Inherited From:</dt>
    <dd class="inherited-from"><ul class="dummy"><li>
        <?js= this.linkto(data.inherits, this.htmlsafe(data.inherits)) ?>
    </li></dd>
    <?js } ?>

    <?js if (data.deprecated) { ?>
        <dt class="important tag-deprecated">Deprecated:</dt><?js
            if (data.deprecated === true) { ?><dd class="yes-def tag-deprecated"><ul class="dummy"><li>Yes</li></ul></dd><?js }
            else { ?><dd><ul class="dummy"><li><?js= data.deprecated ?></li><ul></dd><?js }
        ?>
    <?js } ?>

    <?js if (data.author && author.length) {?>
    <dt class="tag-author">Author:</dt>
    <dd class="tag-author">
        <ul><?js author.forEach(function(a) { ?>
            <li><?js= self.resolveAuthorLinks(a) ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>

    <?js if (data.copyright) {?>
    <dt class="tag-copyright">Copyright:</dt>
    <dd class="tag-copyright"><ul class="dummy"><li><?js= copyright ?></li></ul></dd>
    <?js } ?>

    <?js if (data.license) {?>
    <dt class="tag-license">License:</dt>
    <dd class="tag-license"><ul class="dummy"><li><?js= license ?></li></ul></dd>
    <?js } ?>

    <?js if (data.defaultvalue) {?>
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default"><ul class="dummy">
            <li<?js= defaultObjectClass ?>><?js= data.defaultvalue ?></li>
        </ul></dd>
    <?js } ?>

    <?js if (data.meta && self.outputSourceFiles) {?>
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <?js= self.linkto(meta.shortpath) ?>, <?js= self.linkto(meta.shortpath, 'line ' + meta.lineno, null, 'line' + meta.lineno) ?>
    </li></ul></dd>
    <?js } ?>

    <?js if (data.tutorials && tutorials.length) {?>
    <dt class="tag-tutorial">Tutorials:</dt>
    <dd class="tag-tutorial">
        <ul><?js tutorials.forEach(function(t) { ?>
            <li><?js= self.tutoriallink(t) ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>

    <?js if (data.see && see.length) {?>
    <dt class="tag-see">See:</dt>
    <dd class="tag-see">
        <ul><?js see.forEach(function(s) { ?>
            <li><?js= self.linkto(s) ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>

    <?js if (data.todo && todo.length) {?>
    <dt class="tag-todo">To Do:</dt>
    <dd class="tag-todo">
        <ul><?js todo.forEach(function(t) { ?>
            <li><?js= t ?></li>
        <?js }); ?></ul>
    </dd>
    <?js } ?>
    
    <?js
    var kind = (data.kind == "function") ? "function" : "class"; 
    if (data.alpha) {
    	var alphaMessage = "This "+kind+" is still an Alpha release. It should only be used for experimental development as substantial changes may occur.";
		print( '<div class="alert alert-danger alpha">'+alphaMessage+'</div>' );
	}
	if (data.beta) {
		var betaMessage = "This "+kind+" is still in Beta and is subject to changes or removal.";
		print( '<div class="alert alert-warning beta">'+betaMessage+'</div>' );
	}
	if (data.deprecated) {
		var deprecatedMessage = "This "+kind+" has been deprecated and may be removed in future releases.";
		print( '<div class="alert alert-info deprecated">'+deprecatedMessage+'</div>' );
	} 
	?>
</dl>

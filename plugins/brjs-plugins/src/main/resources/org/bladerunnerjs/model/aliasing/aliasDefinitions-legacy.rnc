default namespace = "http://schema.bladerunnerjs.org/aliasDefinitions"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

## This schema describes the alias definition's markup language which allows you 
## to define logical class mappings that can then be retieved by the AliasRegistry. 

start = aliasDefinitions

## The outermost tag of the alias definitions XML.
aliasDefinitions = element aliasDefinitions
{
	(alias
	|
	group)*
}

## Declares an alias. This alias can be retrieved in the application
## by calling caplin.core.AliasRegistry.getClass() with the alias's name.
alias = element alias
{
	## The logical identifier that this alias is known by.
	attribute name {text},
	
	(
	## The default class that the alias will map to, unless it has been over-ridden in an aliases.xml file.
	attribute defaultClass {text}
	|
	## An interface that the mapped class must implement.
	attribute interface {text}
	)+,
	scenario*
}

## An alternative class mapping for the alias, to be used when the application is running in the named scenario.
scenario = element scenario
{
	## The name of the scenario that this mapping will apply for. 
	attribute name {text},
	## The class that will be used for this alias when the named scenario is used, unless it has been over-ridden in an aliases.xml file.
	attribute class {text}
}

group = element group
{
	attribute name {text},
	
	groupAlias*
}

groupAlias = element alias
{
	## The logical identifier that this alias is known by.
	attribute name {text},
	
	## The default class that the alias will map to, unless it has been over-ridden in an aliases.xml file.
	attribute class {text}+
}